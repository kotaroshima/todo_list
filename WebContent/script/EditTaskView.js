// Generated by CoffeeScript 1.4.0
(function() {

  define(['jQuery', 'Underscore', 'Backbone.localStorage', 'TaskModel', 'text!template/EditTaskView.html'], function($, _, Backbone, TaskModel, viewTemplate) {
    return Backbone.View.extend({
      el: "#dialogContainer",
      template: _.template(viewTemplate),
      events: {
        "click #saveTaskBtn": "onSaveButtonClicked",
        "click #cancelTaskBtn": "onCancelButtonClicked"
      },
      initialize: function() {
        return pubsub.on("SHOW_TASK_EDITOR", this.show, this);
      },
      render: function() {
        var attrs;
        attrs = this._model ? this._model.attributes : {
          text: ""
        };
        attrs["tagStr"] = _.reduce(attrs["tags"], function(memo, tag, idx) {
          if (idx > 0) {
            memo += ", ";
          }
          memo += tag;
          return memo;
        }, "");
        $(this.el).html(this.template(attrs));
        return this;
      },
      show: function(model) {
        var title;
        title = model ? "Edit Task" : "Create New Task";
        this._model = model;
        this.render().$el.dialog({
          title: title,
          width: 600,
          height: 300
        });
      },
      onSaveButtonClicked: function() {
        var prop, tagArr, task;
        tagArr = _.chain($("#tagField").val().split(",")).map($.trim).reject(function(tag) {
          return !tag || tag.length === 0;
        }).value();
        prop = {
          text: $("#newTaskTextField").val(),
          tags: tagArr
        };
        if (this._model) {
          task = this._model;
          task.set(prop);
        } else {
          prop["createdAt"] = new Date().getTime();
          task = new TaskModel(prop);
          this.collection.add(task);
        }
        task.save();
        this._model = null;
        $(this.el).dialog('close');
      },
      onCancelButtonClicked: function() {
        this._model = null;
        $(this.el).dialog('close');
      },
      destroy: function() {
        pubsub.off("SHOW_TASK_EDITOR", this.show);
        Backbone.View.prototype.remove.call(this);
      }
    });
  });

}).call(this);
