// Generated by CoffeeScript 1.4.0
(function() {

  define(['jQueryUITouchPunch', 'Underscore', 'Backbone'], function($, _, Backbone) {
    return Backbone.View.extend({
      itemClass: Backbone.View,
      initialize: function(options) {
        var _this = this;
        Backbone.View.prototype.initialize(this, arguments);
        if (options.itemClass) {
          this.itemClass = options.itemClass;
        }
        this.collection.on("add remove reset", this.render, this);
        pubsub.on("UPDATE_LIST", this.filterChildren, this);
        this._views = [];
        this.$el.sortable({
          start: function(event, ui) {
            ui.item.startIndex = ui.item.index();
          },
          stop: function(event, ui) {
            var collection, model, newIndex;
            collection = _this.collection;
            model = collection.at(ui.item.startIndex);
            newIndex = ui.item.index();
            collection.remove(model);
            collection.add(model, {
              at: newIndex
            });
          }
        });
      },
      render: function(options) {
        var models;
        models = this.collection.models;
        this.clearChildren();
        if (models.length > 0) {
          _.each(models, this.addChild, this);
        } else {
          this.$el.html("No Items");
        }
        return this;
      },
      addChild: function(model) {
        var view;
        view = new this.itemClass({
          model: model
        });
        this.$el.append(view.render().$el);
        this._views.push(view);
      },
      clearChildren: function() {
        var i, _i, _ref;
        for (i = _i = _ref = this._views.length - 1; _i >= 0; i = _i += -1) {
          this.removeChild(i);
        }
      },
      removeChild: function(index) {
        this._views[index].remove();
        this._views.splice(index, 1);
      },
      filterChildren: function(options) {
        _.filter(this._views, function(view) {
          if (view.model.filter(options)) {
            view.$el.show();
          } else {
            view.$el.hide();
          }
        });
      },
      remove: function() {
        this.collection.off("add remove reset", this.render);
        pubsub.off("UPDATE_LIST", this.filterChildren, this);
        Backbone.View.prototype.remove.call(this);
      }
    });
  });

}).call(this);
